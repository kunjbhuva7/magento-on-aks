trigger:
  branches:
    include:
      - main

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: TerraformSecrets

stages:

  - stage: ValidateTerraform
    displayName: '1. Validate Terraform'
    jobs:
      - job: Validate
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: '1.6.6'
            displayName: 'Install Terraform'

          - script: |
              cd terraform
              terraform init
              terraform validate
            displayName: 'Terraform Validate'

  - stage: DeployInfrastructure
    displayName: '2. Deploy Infrastructure'
    dependsOn: ValidateTerraform
    jobs:
      - job: Terraform
        steps:
          - script: |
              cd terraform
              terraform apply -auto-approve \
                -var "subscription_id=$(ARM_SUBSCRIPTION_ID)" \
                -var "client_id=$(ARM_CLIENT_ID)" \
                -var "client_secret=$(ARM_CLIENT_SECRET)" \
                -var "tenant_id=$(ARM_TENANT_ID)"
            displayName: 'Terraform Apply'

  - stage: VerifyInfra
    displayName: '3. Verify Infra'
    dependsOn: DeployInfrastructure
    jobs:
      - job: CheckInfra
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az group show --name magento-rg
                az aks show --resource-group magento-rg --name magento-cluster
            displayName: 'Verify AKS and RG'

  - stage: DeployMagento
    displayName: '4. Deploy Magento on AKS'
    dependsOn: VerifyInfra
    jobs:
      - job: AKSDeployment
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az aks get-credentials --resource-group magento-rg --name magento-cluster
                helm repo add bitnami https://charts.bitnami.com/bitnami
                helm repo update
                helm install magento bitnami/magento -f helm/magento-values.yaml
            displayName: 'Install Magento via Helm'

  - stage: VerifyMagentoPod
    displayName: '5. Verify Magento Pod'
    dependsOn: DeployMagento
    jobs:
      - job: CheckPod
        steps:
          - script: |
              kubectl get pods -n default
              kubectl describe pods -l app.kubernetes.io/name=magento
            displayName: 'Check Magento Pod'

  - stage: ExposeService
    displayName: '6. Expose Magento Service'
    dependsOn: VerifyMagentoPod
    jobs:
      - job: Expose
        steps:
          - script: |
              kubectl get svc
              kubectl expose deployment magento --type=LoadBalancer --name=magento-service
            displayName: 'Expose Magento via LoadBalancer'

  - stage: PostInstallConfig
    displayName: '7. Post-Install Configuration'
    dependsOn: ExposeService
    jobs:
      - job: Config
        steps:
          - script: |
              echo "Post deployment tasks here..."
            displayName: 'Configure Magento App'

  - stage: Notify
    displayName: '8. Notify Completion'
    dependsOn: PostInstallConfig
    jobs:
      - job: SendNotification
        steps:
          - script: |
              echo "Deployment complete. Send email or Slack message."
            displayName: 'Notify Team'

